// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WindowsStore.DAL;

#nullable disable

namespace WindowsStore.DAL.Migrations
{
    [DbContext(typeof(BlazorWindowStoreContext))]
    partial class BlazorWindowStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("BlazorWindowsStore.DAL.Order.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderName")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BlazorWindowsStore.DAL.OrderedWindow.OrderedWindow", b =>
                {
                    b.Property<int>("OrderedWindowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WindowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderedWindowId");

                    b.HasIndex("OrderId");

                    b.HasIndex("WindowId");

                    b.ToTable("OrderedWindows");
                });

            modelBuilder.Entity("BlazorWindowsStore.DAL.OrderedWindowSubElement.OrderedWindowSubElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderedWindowId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubElementId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderedWindowId");

                    b.HasIndex("SubElementId");

                    b.ToTable("OrderedWindowSubElements");
                });

            modelBuilder.Entity("BlazorWindowsStore.DAL.SubElement.SubElement", b =>
                {
                    b.Property<int>("SubElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Element")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Hight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("SubElementId");

                    b.ToTable("SubElements");
                });

            modelBuilder.Entity("BlazorWindowsStore.DAL.Window.Window", b =>
                {
                    b.Property<int>("WindowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("QuantityOfWindows")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WindowName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WindowId");

                    b.HasIndex("WindowName")
                        .IsUnique();

                    b.ToTable("Windows");
                });

            modelBuilder.Entity("BlazorWindowsStore.DAL.OrderedWindow.OrderedWindow", b =>
                {
                    b.HasOne("BlazorWindowsStore.DAL.Order.Order", "Order")
                        .WithMany("OrderedWindows")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorWindowsStore.DAL.Window.Window", "Window")
                        .WithMany("OrderedWindows")
                        .HasForeignKey("WindowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Window");
                });

            modelBuilder.Entity("BlazorWindowsStore.DAL.OrderedWindowSubElement.OrderedWindowSubElement", b =>
                {
                    b.HasOne("BlazorWindowsStore.DAL.OrderedWindow.OrderedWindow", "OrderedWindow")
                        .WithMany("OrderedWindowSubElements")
                        .HasForeignKey("OrderedWindowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorWindowsStore.DAL.SubElement.SubElement", "SubElement")
                        .WithMany()
                        .HasForeignKey("SubElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderedWindow");

                    b.Navigation("SubElement");
                });

            modelBuilder.Entity("BlazorWindowsStore.DAL.Order.Order", b =>
                {
                    b.Navigation("OrderedWindows");
                });

            modelBuilder.Entity("BlazorWindowsStore.DAL.OrderedWindow.OrderedWindow", b =>
                {
                    b.Navigation("OrderedWindowSubElements");
                });

            modelBuilder.Entity("BlazorWindowsStore.DAL.Window.Window", b =>
                {
                    b.Navigation("OrderedWindows");
                });
#pragma warning restore 612, 618
        }
    }
}
